worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;
    gzip on;

    server {
        listen 80;
        server_name hao123.ddns.net;

        location /.well-known/acme-challenge/ {
            root /var/www/letsencrypt;
            allow all;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name hao123.ddns.net;
        server_name 140.245.56.252;  # Also listen on the IP

        resolver 127.0.0.11 valid=10s;

        ssl_certificate /etc/letsencrypt/live/hao123.ddns.net/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/hao123.ddns.net/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers HIGH:!aNULL:!MD5;

        root /usr/share/nginx/html;
        index index.html;

        location / {
            try_files $uri /index.html;
        }

        location /.well-known/acme-challenge/ {
            root /var/www/letsencrypt;
            allow all;
        }

        location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg|webp)$ {
            expires 6M;
            access_log off;
            add_header Cache-Control "public";
        }

        # Your existing website API (keep this unchanged)
        location /api/ {
            proxy_pass http://backend:8000;  # or whatever your existing backend is
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Content-Type $http_content_type;
            proxy_set_header Origin $http_origin;
            proxy_set_header Connection keep-alive;

            # Disable response buffering
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;

            # Allow long-running connections for streaming
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            send_timeout 300s;

            fastcgi_buffering off;
            chunked_transfer_encoding on;
        }

        # Your new FastAPI backend
        location /api/v1/ {
            proxy_pass http://study-assistant-backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Content-Type $http_content_type;
            proxy_set_header Origin $http_origin;
            proxy_set_header Connection keep-alive;

            # Disable response buffering
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;

            # Allow long-running connections for streaming
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            send_timeout 300s;

            fastcgi_buffering off;
            chunked_transfer_encoding on;
        }
    }
}